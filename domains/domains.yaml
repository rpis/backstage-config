apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: deposit-accounts
  description: Deposits Domain
  labels:
    example.com/custom: custom_label_value
  annotations:
    example.com/service-discovery: artistweb
    circleci.com/project-slug: github/example-org/artist-website
  links:
    - url: https://admin.example-org.com
      title: Admin Dashboard
      icon: dashboard
      type: admin-dashboard
spec:
  owner: deposit-accounts-team

---
apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: current-accounts
  description: Current Domain
spec:
  owner: current-accounts-team

---
apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: tools
  description: |
    Introducing a new apiVersion is basically the same as adding a new kind. Bear in mind that most plugins will be compiled against the builtin @backstage/catalog-model package and have expectations that kinds align with that.

    The catalog backend itself, from a storage and API standpoint, does not care about the kind of entities it stores. Extending with new kinds is mainly a matter of permitting them to pass validation when building the backend catalog using the CatalogBuilder, and then to make plugins be able to understand the new kind.

spec:
  owner: cait
